diff -Nrub "build\\binary\\gpgme\\work\\lib.orig/cmake/Gpgmepp/GpgmeppConfig.cmake" "build\\binary\\gpgme\\work\\lib/cmake/Gpgmepp/GpgmeppConfig.cmake"
--- "build\\binary\\gpgme\\work\\lib.orig/cmake/Gpgmepp/GpgmeppConfig.cmake"	2018-04-26 14:06:59.000000000 -0700
+++ "build\\binary\\gpgme\\work\\lib/cmake/Gpgmepp/GpgmeppConfig.cmake"	2018-04-27 05:17:06.512348800 -0700
@@ -52,7 +52,7 @@
   return()
 endif()
 if(NOT "${_targetsDefined}" STREQUAL "")
-  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
+  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined./nTargets Defined: ${_targetsDefined}/nTargets not yet defined: ${_targetsNotDefined}/n")
 endif()
 unset(_targetsDefined)
 unset(_targetsNotDefined)
@@ -62,37 +62,16 @@
 add_library(Gpgmepp SHARED IMPORTED)
 
 set_target_properties(Gpgmepp PROPERTIES
-  IMPORTED_IMPLIB "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/lib/libgpgmepp.dll.a"
-  INTERFACE_INCLUDE_DIRECTORIES "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/include/gpgme++;/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/include"
-  INTERFACE_LINK_LIBRARIES "pthread;/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/lib/libgpgme.dll.a;-L/build/gpg4win/src/playground/install/pkgs/libassuan-2.5.1/lib -lassuan -lws2_32 -L/build/gpg4win/src/playground/install/pkgs/libgpg-error-1.27/lib -lgpg-error"
-  IMPORTED_LOCATION "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/bin/libgpgmepp-6.dll"
+  IMPORTED_IMPLIB "C:/Users/User/CraftRoot/lib/libgpgmepp.dll.a"
+  INTERFACE_INCLUDE_DIRECTORIES "C:/Users/User/CraftRoot/include/gpgme++;C:/Users/User/CraftRoot/include"
+  INTERFACE_LINK_LIBRARIES "pthread;C:/Users/User/CraftRoot/lib/libgpgme.dll.a;-lassuan -lws2_32 -LC:/Users/User/CraftRoot/lib/ -lgpg-error"
+  IMPORTED_LOCATION "C:/Users/User/CraftRoot/bin/libgpgmepp-6.dll"
 )
-list(APPEND _IMPORT_CHECK_TARGETS Gpgmepp )
-list(APPEND _IMPORT_CHECK_FILES_FOR_Gpgmepp "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/lib/libgpgmepp.dll.a" "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/bin/libgpgmepp-6.dll" )
-
 
 if(CMAKE_VERSION VERSION_LESS 2.8.12)
   message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
 endif()
 
-# Loop over all imported files and verify that they actually exist
-foreach(target ${_IMPORT_CHECK_TARGETS} )
-  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
-    if(NOT EXISTS "${file}" )
-      message(FATAL_ERROR "The imported target \"${target}\" references the file
-   \"${file}\"
-but this file does not exist.  Possible reasons include:
-* The file was deleted, renamed, or moved to another location.
-* An install or uninstall procedure did not complete successfully.
-* The installation package was faulty and contained
-   \"${CMAKE_CURRENT_LIST_FILE}\"
-but not all the files it references.
-")
-    endif()
-  endforeach()
-  unset(_IMPORT_CHECK_FILES_FOR_${target})
-endforeach()
-unset(_IMPORT_CHECK_TARGETS)
 
 # Commands beyond this point should not need to know the version.
 set(CMAKE_IMPORT_FILE_VERSION)
diff -Nrub "build\\binary\\gpgme\\work\\lib.orig/cmake/QGpgme/QGpgmeConfig.cmake" "build\\binary\\gpgme\\work\\lib/cmake/QGpgme/QGpgmeConfig.cmake"
--- "build\\binary\\gpgme\\work\\lib.orig/cmake/QGpgme/QGpgmeConfig.cmake"	2018-04-26 14:06:59.000000000 -0700
+++ "build\\binary\\gpgme\\work\\lib/cmake/QGpgme/QGpgmeConfig.cmake"	2018-04-27 08:40:42.706497800 -0700
@@ -1,105 +1,27 @@
-# CMake Config file for QGPGME.
-# Copyright (C) 2016 Intevation GmbH
-#
-# This file is part of GPGME.
-#
-# GPGME-CL is free software; you can redistribute it and/or modify it
-# under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# GPGME-CL is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Lesser General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
-# 02111-1307, USA
-
-# based on a generated file from cmake.
-# Generated by CMake 3.0.2
-
-if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
-   message(FATAL_ERROR "CMake >= 2.6.0 required")
-endif()
-cmake_policy(PUSH)
-cmake_policy(VERSION 2.6)
-#----------------------------------------------------------------
-# Generated CMake target import file.
-#----------------------------------------------------------------
-
-# Commands may need to know the format version.
-set(CMAKE_IMPORT_FILE_VERSION 1)
-
-# Protect against multiple inclusion, which would fail when already imported targets are added once more.
-set(_targetsDefined)
-set(_targetsNotDefined)
-set(_expectedTargets)
-foreach(_expectedTarget QGpgme)
-  list(APPEND _expectedTargets ${_expectedTarget})
-  if(NOT TARGET ${_expectedTarget})
-    list(APPEND _targetsNotDefined ${_expectedTarget})
+
+####### Expanded from @PACKAGE_INIT@ by configure_package_config_file() #######
+####### Any changes to this file will be overwritten by the next CMake run ####
+####### The input file was QGpgmeConfig.cmake.in                            ########
+
+get_filename_component(PACKAGE_PREFIX_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../" ABSOLUTE)
+
+macro(set_and_check _var _file)
+  set(${_var} "${_file}")
+  if(NOT EXISTS "${_file}")
+    message(FATAL_ERROR "File or directory ${_file} referenced by variable ${_var} does not exist !")
   endif()
-  if(TARGET ${_expectedTarget})
-    list(APPEND _targetsDefined ${_expectedTarget})
+endmacro()
+
+macro(check_required_components _NAME)
+  foreach(comp ${${_NAME}_FIND_COMPONENTS})
+    if(NOT ${_NAME}_${comp}_FOUND)
+      if(${_NAME}_FIND_REQUIRED_${comp})
+        set(${_NAME}_FOUND FALSE)
   endif()
-endforeach()
-if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
-  set(CMAKE_IMPORT_FILE_VERSION)
-  cmake_policy(POP)
-  return()
-endif()
-if(NOT "${_targetsDefined}" STREQUAL "")
-  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
-endif()
-unset(_targetsDefined)
-unset(_targetsNotDefined)
-unset(_expectedTargets)
-
-# Create imported target QGpgme
-add_library(QGpgme SHARED IMPORTED)
-
-set_target_properties(QGpgme PROPERTIES
-  IMPORTED_IMPLIB_RELEASE "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/lib/libqgpgme.dll.a"
-  INTERFACE_INCLUDE_DIRECTORIES "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/include/qgpgme;/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/include"
-  INTERFACE_LINK_LIBRARIES "Gpgmepp;Qt5::Core"
-  IMPORTED_LOCATION "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/lib/libqgpgme-7.dll"
-)
-
-list(APPEND _IMPORT_CHECK_TARGETS QGgpme )
-list(APPEND _IMPORT_CHECK_FILES_FOR_Qgpgme "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/lib/libqgpgme.dll.a" "/build/gpg4win/src/playground/install/pkgs/gpgme-1.10.0/bin/libqgpgme-7.dll" )
-
-if(CMAKE_VERSION VERSION_LESS 2.8.12)
-  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
-endif()
-
-# Loop over all imported files and verify that they actually exist
-foreach(target ${_IMPORT_CHECK_TARGETS} )
-  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
-    if(NOT EXISTS "${file}" )
-      message(FATAL_ERROR "The imported target \"${target}\" references the file
-   \"${file}\"
-but this file does not exist.  Possible reasons include:
-* The file was deleted, renamed, or moved to another location.
-* An install or uninstall procedure did not complete successfully.
-* The installation package was faulty and contained
-   \"${CMAKE_CURRENT_LIST_FILE}\"
-but not all the files it references.
-")
     endif()
   endforeach()
-  unset(_IMPORT_CHECK_FILES_FOR_${target})
-endforeach()
-unset(_IMPORT_CHECK_TARGETS)
-
-# This file does not depend on other imported targets which have
-# been exported from the same project but in a separate export set.
-
-# Commands beyond this point should not need to know the version.
-set(CMAKE_IMPORT_FILE_VERSION)
-cmake_policy(POP)
+endmacro()
+
+####################################################################################
 
-# Gpgmepp is a requirement for qgpgme
-find_package(Gpgmepp CONFIG REQUIRED)
+include("${CMAKE_CURRENT_LIST_DIR}/QGpgmeTargets.cmake")
diff -Nrub "build\\binary\\gpgme\\work\\lib.orig/cmake/QGpgme/QGpgmeTargets-relwithdebinfo.cmake" "build\\binary\\gpgme\\work\\lib/cmake/QGpgme/QGpgmeTargets-relwithdebinfo.cmake"
--- "build\\binary\\gpgme\\work\\lib.orig/cmake/QGpgme/QGpgmeTargets-relwithdebinfo.cmake"	1969-12-31 16:00:00.000000000 -0800
+++ "build\\binary\\gpgme\\work\\lib/cmake/QGpgme/QGpgmeTargets-relwithdebinfo.cmake"	2018-04-27 08:41:05.705050600 -0700
@@ -0,0 +1,19 @@
+#----------------------------------------------------------------
+# Generated CMake target import file for configuration "RelWithDebInfo".
+#----------------------------------------------------------------
+
+# Commands may need to know the format version.
+set(CMAKE_IMPORT_FILE_VERSION 1)
+
+# Import target "QGpgme" for configuration "RelWithDebInfo"
+set_property(TARGET QGpgme APPEND PROPERTY IMPORTED_CONFIGURATIONS RELWITHDEBINFO)
+set_target_properties(QGpgme PROPERTIES
+  IMPORTED_IMPLIB_RELWITHDEBINFO "${_IMPORT_PREFIX}/lib/libqgpgme.dll.a"
+  IMPORTED_LOCATION_RELWITHDEBINFO "${_IMPORT_PREFIX}/bin/libqgpgme-7.dll"
+  )
+
+list(APPEND _IMPORT_CHECK_TARGETS QGpgme )
+list(APPEND _IMPORT_CHECK_FILES_FOR_QGpgme "${_IMPORT_PREFIX}/lib/libqgpgme.dll.a" "${_IMPORT_PREFIX}/bin/libqgpgme-7.dll" )
+
+# Commands beyond this point should not need to know the version.
+set(CMAKE_IMPORT_FILE_VERSION)
diff -Nrub "build\\binary\\gpgme\\work\\lib.orig/cmake/QGpgme/QGpgmeTargets.cmake" "build\\binary\\gpgme\\work\\lib/cmake/QGpgme/QGpgmeTargets.cmake"
--- "build\\binary\\gpgme\\work\\lib.orig/cmake/QGpgme/QGpgmeTargets.cmake"	1969-12-31 16:00:00.000000000 -0800
+++ "build\\binary\\gpgme\\work\\lib/cmake/QGpgme/QGpgmeTargets.cmake"	2018-04-27 08:40:57.195121300 -0700
@@ -0,0 +1,99 @@
+# Generated by CMake
+
+if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
+   message(FATAL_ERROR "CMake >= 2.6.0 required")
+endif()
+cmake_policy(PUSH)
+cmake_policy(VERSION 2.6)
+#----------------------------------------------------------------
+# Generated CMake target import file.
+#----------------------------------------------------------------
+
+# Commands may need to know the format version.
+set(CMAKE_IMPORT_FILE_VERSION 1)
+
+# Protect against multiple inclusion, which would fail when already imported targets are added once more.
+set(_targetsDefined)
+set(_targetsNotDefined)
+set(_expectedTargets)
+foreach(_expectedTarget QGpgme)
+  list(APPEND _expectedTargets ${_expectedTarget})
+  if(NOT TARGET ${_expectedTarget})
+    list(APPEND _targetsNotDefined ${_expectedTarget})
+  endif()
+  if(TARGET ${_expectedTarget})
+    list(APPEND _targetsDefined ${_expectedTarget})
+  endif()
+endforeach()
+if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
+  unset(_targetsDefined)
+  unset(_targetsNotDefined)
+  unset(_expectedTargets)
+  set(CMAKE_IMPORT_FILE_VERSION)
+  cmake_policy(POP)
+  return()
+endif()
+if(NOT "${_targetsDefined}" STREQUAL "")
+  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
+endif()
+unset(_targetsDefined)
+unset(_targetsNotDefined)
+unset(_expectedTargets)
+
+
+# Compute the installation prefix relative to this file.
+get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
+get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
+get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
+get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
+if(_IMPORT_PREFIX STREQUAL "/")
+  set(_IMPORT_PREFIX "")
+endif()
+
+# Create imported target QGpgme
+add_library(QGpgme SHARED IMPORTED)
+
+set_target_properties(QGpgme PROPERTIES
+  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/QGpgme;${_IMPORT_PREFIX}/include"
+  INTERFACE_LINK_LIBRARIES "Qt5::Core"
+)
+
+if(CMAKE_VERSION VERSION_LESS 2.8.12)
+  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
+endif()
+
+# Load information for each installed configuration.
+get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
+file(GLOB CONFIG_FILES "${_DIR}/QGpgmeTargets-*.cmake")
+foreach(f ${CONFIG_FILES})
+  include(${f})
+endforeach()
+
+# Cleanup temporary variables.
+set(_IMPORT_PREFIX)
+
+# Loop over all imported files and verify that they actually exist
+foreach(target ${_IMPORT_CHECK_TARGETS} )
+  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
+    if(NOT EXISTS "${file}" )
+      message(FATAL_ERROR "The imported target \"${target}\" references the file
+   \"${file}\"
+but this file does not exist.  Possible reasons include:
+* The file was deleted, renamed, or moved to another location.
+* An install or uninstall procedure did not complete successfully.
+* The installation package was faulty and contained
+   \"${CMAKE_CURRENT_LIST_FILE}\"
+but not all the files it references.
+")
+    endif()
+  endforeach()
+  unset(_IMPORT_CHECK_FILES_FOR_${target})
+endforeach()
+unset(_IMPORT_CHECK_TARGETS)
+
+# This file does not depend on other imported targets which have
+# been exported from the same project but in a separate export set.
+
+# Commands beyond this point should not need to know the version.
+set(CMAKE_IMPORT_FILE_VERSION)
+cmake_policy(POP)
